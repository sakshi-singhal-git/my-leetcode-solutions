class Solution {
public:
    int square(vector<vector<char>>& matrix)
    {
        int n = matrix.size();
        int m = matrix[0].size();
        vector<vector<int>>dp(n,vector<int>(m,0));
        
        int maxi = 0;
        for(int j=0;j<matrix[0].size();j++){
            if(matrix[0][j] == '1'){
                dp[0][j] = 1;
                maxi = max(maxi,dp[0][j]);
            }
            
        }
        
        for(int i=0;i<matrix.size();i++)
        {
            if(matrix[i][0] == '1')
            {
                dp[i][0] = 1;
                maxi = max(maxi,dp[i][0]);
            }
            
        }
            
        for(int i=1;i<matrix.size();i++)
        {
            for(int j=1;j<matrix[0].size();j++)
            {
                if(matrix[i][j] == '1')
                {
                    dp[i][j] = min(dp[i-1][j-1] , min(dp[i-1][j], dp[i][j-1]))+1;
                    maxi = max(maxi,dp[i][j]);
                }
                
            }
        }
        return maxi;
    }
    int maximalSquare(vector<vector<char>>& matrix) {
        int ans = square(matrix);
        return ans* ans;
    }
};
