class Solution {
public:
    
    map<string,bool> mp;
    bool getcheck(string str, set<string> s)
    {
        if(s.find(str) != s.end()) return true;
        if(mp.find(str) != mp.end()) return mp[str];
        for(int i=1;i<str.length();i++)
        {
            string left = str.substr(0,i);
            if(s.find(left)!=s.end() && getcheck(str.substr(i),s))
            {
                mp[str] = true;
                return true;
            }
        }
        mp[str] = false;
        return false;
    }
    bool wordBreak(string s, vector<string>& wordDict) {
        set<string> all;
        all.insert(wordDict.begin(),wordDict.end());
        return getcheck(s,all);
    }
};
