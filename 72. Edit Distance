class Solution {
public:
    int memos(string s1,string s2, int n, int m, vector<vector<int>>&dp)
    {
        if(n==0 || m == 0)
            return max(n,m);
        
        if(dp[n][m] != -1) return dp[n][m];
        if(s1[n-1] == s2[m-1])
        {
            return dp[n][m] = memos(s1,s2,n-1,m-1,dp);
        }
        else
        return dp[n][m] = min(memos(s1,s2,n,m-1,dp) , min(memos(s1,s2,n-1, m,dp),memos(s1,s2,n-1,m-1,dp))) +1;
    }
    
    int minDistance(string word1, string word2) {
        vector<vector<int>> dp(word1.length()+1,vector<int>(word2.length()+1,-1));
        return memos(word1, word2,word1.length(),word2.length(), dp);
        }
};
