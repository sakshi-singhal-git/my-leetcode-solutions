/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        if(head == NULL)
            return head;
        ListNode* oddhead = NULL, *odd = NULL, *evenhead = NULL, *even = NULL, *temp = head;
        int count = 0;
        while(temp!= NULL){
            if(count%2 == 0){   //odd listlist
                if(odd == NULL){
                    oddhead = temp;
                    odd = temp; 
                }
                else{
                    odd->next = temp;
                    odd  = odd->next;
                }
                temp = temp->next;
                odd->next = NULL; 
                count++;
            }
            else{
                if(even == NULL){
                    evenhead = temp;
                    even = temp;
                }
                else{
                    even->next = temp;
                    even = even->next;
                }
                temp = temp->next;
                even->next = NULL;
                count++;
            }
        }
        odd->next = evenhead;
        return oddhead;
    }
};
