class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        if(k == 0) return nums;
        vector<int> ans;
        deque<int> lists;
        int size = nums.size();
        int i=0,j=0;
        while(j<size)
        {
            if(!lists.empty())
            {
                while(!lists.empty() && lists.back()<nums[j])
                { //  cout<<lists.front()<<" "<<lists.back()<<endl;
                    lists.pop_back();
                }
            }
            lists.push_back(nums[j]);
                
            if(j-i+1 < k)
                j++;
            else if(j-i+1 == k)
            {
                ans.push_back(lists.front());
                if(lists.front() == nums[i])
                    lists.pop_front();
                i++;
                j++;
            } 
        }
        return ans;
    }
};
