/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        int len1 = 0, len2 = 0;
        ListNode* temp1 = headA, *temp2 = headB;
        while(headA != NULL && headB!= NULL)
        {
            len1++; len2++;
            headA = headA->next; headB = headB->next;
        }
        if(headA!= NULL)
        {
            while(headA != NULL)
            {
                len1++;
                headA = headA->next;
            }
        }
        if(headB != NULL)
        {
            while(headB!= NULL)
            {
                len2++;
                headB = headB->next;
            }
            
        }
        headA =  temp1;
        headB = temp2;
        if(len1>len2)
        {
            while(len1 != len2)
            {
                headA = headA->next;
                len1--;
            }
        }
        else if(len2> len1)
        {
            while(len1 != len2)
            {
                headB = headB->next;
                len2--;
            }
        }
            while(headA!= NULL && headB != NULL)
            {
                if(headA == headB)
                    return headA;
                else
                {
                    headA = headA->next;
                    headB = headB->next;
                }
            }
            return NULL;
                
        }
    
};
