class Solution {
public:
    int call(vector<int>& coins, int n, int amount,vector<vector<int>>& dp)
    {
        if(amount ==0) return 1;
        if(n == 0)
            return 0;
        
        if(dp[n][amount]!=-1) return dp[n][amount];
        else if(coins[n-1]<=amount)
            return dp[n][amount] = call(coins,n,amount-coins[n-1],dp)+call(coins,n-1,amount,dp);
        else
            return dp[n][amount] = call(coins,n-1,amount,dp);
    }
    
    int change(int amount, vector<int>& coins) {
        vector<vector<int>> dp(coins.size()+1,vector<int>(amount+1,-1));
        return call(coins,coins.size(),amount,dp);
    }
};
