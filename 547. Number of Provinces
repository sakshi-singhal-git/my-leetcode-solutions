class Solution {
public:
    void bfs(vector<vector<int>>& isConnected, vector<bool>&visited, int src)
    {
        visited[src] = true;
        queue<int> q;
        q.push(src);
        while(!q.empty())
        {
            int fr = q.front();
            q.pop();
            for(int i=0;i<isConnected[fr].size();i++)
            {
                if(isConnected[fr][i] && !visited[i])
                {
                    visited[i] = true;
                    q.push(i);
                }
            }
        }
    }
    
    int findCircleNum(vector<vector<int>>& isConnected) {
        vector<bool> visited(isConnected.size(),false);
        int count = 0;
        for(int i=0;i<isConnected.size();i++)
        {
            if(!visited[i])
            {
                count++;
                bfs(isConnected,visited,i);
            }
        }
        return count;
    }
};
