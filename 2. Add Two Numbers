/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if(!l1) return l2;
        if(!l2) return l1;
        
        ListNode* head=  new ListNode(0);
        ListNode* temp = head;
        int sum = 0;
        int carry = 0;
        while(l1 && l2)
        {
            sum = l1->val + l2->val + carry;
            carry = sum/10;
            temp->next = new ListNode(sum%10);
            l1 = l1->next;
            l2 = l2->next;
            temp = temp->next;
        }
        ListNode* head2 = NULL;
        ListNode* extra = head2;
        if(l1)
            extra = l1;
        else
            extra = l2;
    
        while(extra!= NULL)
        {
            sum = extra->val + carry;
            carry = sum/10;
            temp->next = new ListNode(sum%10);
            extra = extra->next;
            temp = temp->next;
        }
        if(carry)
            temp->next = new ListNode(carry);
        return head->next;
    }
};
