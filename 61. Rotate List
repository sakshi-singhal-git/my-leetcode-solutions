/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(!head) return head;
        
        ListNode* temp = head;
        int count = 1;
        while(temp->next != NULL)
        {
            count++;
            temp = temp->next;
        }
        if(k == count)  return head;
        temp->next = head;
        
        temp = head;
        k %= count;
        while(count-k-1)
        {
            temp = temp->next;
            k++;
        }
        head = temp->next;
        temp->next = NULL;
        return head;
    }
    
};
